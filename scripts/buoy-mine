#!/bin/bash
set -e
INSTANCE_NAME=$1

if [ "$INSTANCE_NAME" = "" ]; then echo "[!] missing instance name argument!"; exit; fi

echo "[+] getting instance id from infrastructure..."
INSTANCE_ID=$(cat "infrastructure/terraform.tfstate" | jq -r ".outputs.${INSTANCE_NAME}_instance_id.value")
EMAIL=$(cat "infrastructure/terraform.tfstate" | jq -r '.resources[] | select(.type == "aws_sns_topic_subscription").instances[0].attributes.endpoint')
MESSAGE="Buoy-Canary-Token triggered on instanceId $INSTANCE_ID!"

if [ "$INSTANCE_ID" = "null" ]; then echo "[!] instance id not found for name '$INSTANCE_NAME'!"; exit; fi
if [ "$EMAIL" = "null" ]; then echo "[!] email not found, cancelling deployment!"; exit; fi

echo "[i] getting canary token from canarytokens.org..."
CANARY_RESPONSE=$(curl -s 'https://canarytokens.org/generate' \
  -H 'Content-Type: multipart/form-data; boundary=----FormBoundary' \
  --data-raw $'------FormBoundary\r\nContent-Disposition: form-data; name="type"\r\n\r\naws_keys\r\n------FormBoundary\r\nContent-Disposition: form-data; name="email"\r\n\r\n'$EMAIL$'\r\n------FormBoundary\r\nContent-Disposition: form-data; name="webhook_url"\r\n\r\n\r\n------FormBoundary\r\nContent-Disposition: form-data; name="fmt"\r\n\r\n\r\n------FormBoundary\r\nContent-Disposition: form-data; name="sql_server_sql_action"\r\n\r\n\r\n------FormBoundary\r\nContent-Disposition: form-data; name="azure_id_cert_file_name"\r\n\r\n\r\n------FormBoundary\r\nContent-Disposition: form-data; name="cmd_process"\r\n\r\n\r\n------FormBoundary\r\nContent-Disposition: form-data; name="clonedsite"\r\n\r\n\r\n------FormBoundary\r\nContent-Disposition: form-data; name="sql_server_table_name"\r\n\r\nTABLE1\r\n------FormBoundary\r\nContent-Disposition: form-data; name="sql_server_view_name"\r\n\r\nVIEW1\r\n------FormBoundary\r\nContent-Disposition: form-data; name="sql_server_function_name"\r\n\r\nFUNCTION1\r\n------FormBoundary\r\nContent-Disposition: form-data; name="sql_server_trigger_name"\r\n\r\nTRIGGER1\r\n------FormBoundary\r\nContent-Disposition: form-data; name="redirect_url"\r\n\r\n\r\n------FormBoundary\r\nContent-Disposition: form-data; name="memo"\r\n\r\n'"$MESSAGE"$'\r\n------FormBoundary--\r\n')


ACCESS_ID=$(echo "$CANARY_RESPONSE" | jq '.aws_access_key_id')
ACCESS_SECRET=$(echo "$CANARY_RESPONSE" | jq '.aws_secret_access_key')
REGION=$(echo "$CANARY_RESPONSE" | jq '.region')
echo "[+] got canary token: $ACCESS_ID"

if [ "$ACCESS_ID" = "null" ]; then echo "[!] ACCESS_ID not found in canary response: $CANARY_RESPONSE!"; exit; fi
if [ "$ACCESS_SECRET" = "null" ]; then echo "[!] ACCESS_SECRET not found in canary response: $CANARY_RESPONSE!"; exit; fi
if [ "$REGION" = "null" ]; then echo "[!] REGION not found in canary response: $CANARY_RESPONSE!"; exit; fi

ENCODED_FILE=$(echo "AWS_ACCESS_KEY_ID=$ACCESS_ID
AWS_SECRET_ACCESS_KEY=$ACCESS_SECRET
AWS_DEFAULT_REGION=$REGION
" | base64 -w 0)

echo "[i] logging in to ssm: $INSTANCE_ID"
aws ssm start-session --target "$INSTANCE_ID" --region us-east-1 --reason "buoy-canary deployment" --document-name AWS-StartNonInteractiveCommand --parameters '{"command": ["sudo su ubuntu -c \"echo '"$ENCODED_FILE"' | base64 -d > /app/.env && echo '"$ENCODED_FILE"' | base64 -d > ~/.env\""]}'
echo "[+] buoy canary token successfully deployed!"
